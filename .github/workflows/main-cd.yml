name: main cd

on:
  push:
    branches:
      - main

jobs:
  install-and-test:
    runs-on: ubuntu-latest
    name: install and test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@master
    - uses: c-hive/gha-yarn-cache@v1

    - name: Install node modules
      run: |
        yarn install
    - name: Run test
      run: |
        yarn test-ci
  build-android:
    needs: [install-and-test]
    runs-on: ubuntu-latest
    name: build-android
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@master
    - uses: c-hive/gha-yarn-cache@v1

    - name: Install node modules
      run: |
        yarn install
    - name: Cache Gradle Wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-
    - name: Make Gradlew Executable
      run: cd android && chmod +x ./gradlew

    - name: Build Android App Bundle
      id: build_app
      run: |
        cd android && ./gradlew bundleRelease --no-daemon
#     - name: Sign App Bundle
#       id: sign_app
#       uses: r0adkll/sign-android-release@v1
#       with:
#         releaseDirectory: android/app/build/outputs/bundle/release
#         signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
#         alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
#         keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
#         keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: App Bundle
        path: android/app/build/outputs/bundle/release

#     - name: Deploy to Play Store (BETA)
#       uses: r0adkll/upload-google-play@v1
#       with:
#         serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT }}
#         packageName: com.testedapp
#         releaseFile: a${{steps.sign_app.outputs.signedReleaseFile}}
#         track: beta
#         inAppUpdatePriority: 3
#         userFraction: 0.5
#         whatsNewDirectory: android/release-notes/
        # mappingFile: android/app/build/outputs/mapping/release/mapping.txt
  build-ios:
    needs: [install-and-test]
    runs-on: [macos-latest]
    steps: 
      - uses: actions/checkout@v2
      - name: Install npm dependencies
        run: |
          npm install
      - name: Install pod dependencies
        run: |
          cd ios && pod install
      - name: Build app
        run: |       
          xcodebuild -workspace myapp.xcworkspace -scheme myapp archive -archivePath myapp.xcarchive -allowProvisioningUpdates
          xcodebuild -exportArchive -archivePath ./myapp.xcarchive -exportPath . -exportOptionsPlist myapp/Info.plist
          mv myapp.ipa ../myapp.ipa
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: myapp.ipa
          path: ios/build/
    
